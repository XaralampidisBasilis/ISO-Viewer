syms x t g s p q a0 a1 a2 b0 b1 
assume([x t g s p q a0 a1 a2 b0 b1 ], 'real')

assume(0 < p & p < 1)
assume(0 < q & q < 1)
assume(1 < g)
assume(0 < x & x < p)
assume(0 < t & t < 1)
assume(0 < s)

f_x = (a2*x^2 + a1*x + a0) / (b1*x + b0);

% First and second derivatives
f1_x = diff(f_x, x);
f2_x = diff(f1_x, x);

% Apply the restrictions
eq1 = subs(f_x, x, 0) == 0; % f(0) = 0
eq2 = subs(f_x, x, p) == q; % f(p) = q
eq3 = subs(f1_x, x, 0) == 0; % f'(0) = 0
eq4 = subs(f1_x, x, p) == g; % f'(p) = g
%eq5 = subs(f2_x, x, p) == 0;% f''(p) = 0 

% Solve the system of equations
sol = solve([eq1, eq2, eq3, eq4], [a0 a1 a2 b0 b1], 'ReturnConditions', true);

% Display the solution
s_x  = simplify(subs(f_x,  [a0 a1 a2 b0 b1], [sol.a0, sol.a1, sol.a2, sol.b0, sol.b1]));
s1_x = simplify(subs(f1_x, [a0 a1 a2 b0 b1], [sol.a0, sol.a1, sol.a2, sol.b0, sol.b1]));
s2_x = simplify(subs(f2_x, [a0 a1 a2 b0 b1], [sol.a0, sol.a1, sol.a2, sol.b0, sol.b1]));

pretty(s_x)

%% Simplify

s_t  = simplify(subs(s_x,  [x, g], [p * t, q/p * s]));
s1_t = simplify(subs(s1_x, [x, g], [p * t, q/p * s]));
s2_t = simplify(subs(s2_x, [x, g], [p * t, q/p * s]));

pretty(s_t)


%% bounds

assume(0 < p & p < 1)
assume(0 < q & q < 1)
assume(1 < g)
q1_max = solve(simplify(limit(s1_x/x, x, 0)) > 0, q, 'ReturnConditions', true);

q1_min = solve(limit(subs(z1_x/x, [x p q], [1-x, 1-p, 1-q]), x, 1)) > 0, q, 'ReturnConditions', true);

q1_min = simplify(limit(subs(z1_x/x, [x p q], [1-x, 1-p, 1-q]), x, 1));

q2_max = simplify(limit(z2_x, x, p));
q2_min = simplify(limit(subs(z2_x/x, [x p q], [1-x, 1-p, 1-q]), x, p));
