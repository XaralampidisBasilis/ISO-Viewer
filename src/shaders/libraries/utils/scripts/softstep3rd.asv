syms x t a b c d e p q g s
assume([x xr a b c d e p q g], 'real')

f_x = a*x^3 + b*x^2 + c*x + d;

% First and second derivatives
f1_x = diff(f_x, x);
f2_x = diff(f1_x, x);

% Apply the restrictions
eq1 = subs(f_x, x, 0) == 0; % f(0) = 0
eq2 = subs(f_x, x, p) == q; % f(p) = q
eq3 = subs(f1_x, x, 0) == 0; % f'(0) = 0
eq4 = subs(f1_x, x, p) == g; % f'(p) = g
eq5 = subs(f2_x, x, p) == 0;% f''(p) = 0 % we need to remove to be solvable

% Solve the system of equations
sol = solve([eq1, eq2, eq3, eq4], [a, b, c, d], 'ReturnConditions', true);

% Display the solution
a_sol = sol.a;
b_sol = sol.b;
c_sol = sol.c;
d_sol = sol.d;

s_x  = simplify(subs(f_x,  [a, b, c, d], [a_sol, b_sol, c_sol, d_sol]));
s1_x = simplify(subs(f1_x, [a, b, c, d], [a_sol, b_sol, c_sol, d_sol]));
s2_x = simplify(subs(f2_x, [a, b, c, d], [a_sol, b_sol, c_sol, d_sol]));

pretty(s_x)

%% Limit

s_t  = simplify(subs(s_x,  [x, g], [p * t, q/p * s]));
s1_t = simplify(subs(s1_x, [x, g], [p * t, q/p * s]));
s2_t = simplify(subs(s2_x, [x, g], [p * t, q/p * s]));

pretty(s_x)
pretty(s_t)

%% Solution Simplified

factors1_t = factor(s1_t);
disp(factors1_t)

pol_t = 3*s*t - 6*t - 2*s + 6;
[params_t, terms_t] = coeffs(pol_t, t);

z_t =  * dot(params_t, terms_t);

pol1_t = 6*s + 24*t - 15*s*t + 8*s*t^2 - 12*t^2 - 12;
[params1_t, terms1_t] = coeffs(pol1_t, t);

z1_t = (-q/p * t) * dot(params1_t, terms1_t);

%% Find condition for q so that for every x z1_x >= 0

equation1 = solve(z1_x == 0, q);
q_min = simplify(limit(equation1, x, 0));

equation2 = solve(subs(z1_x, [x p q], [1-x, 1-p, 1-q]) == 0, q);
q_max = simplify(limit(equation2, x, 1));

pretty([q_min, q_max])
%% Conditions

assume(0 < t & t < 1)
assume(0 < x & x < p)
assume(0 < p & p < 1)
assume(0 < q & q < 1)
assume(1 < g)
assume(p/q < s)

pretty(z1_t)

cond_t = -(6*s + 24*t - 15*s*t + 8*s*t^2 - 12*t^2 - 12); % >= 0
[params_t, terms_t] = coeffs(cond_t, t);

discriminant_s = simplify(params_t(2)^2 - 4 * params_t(1)*params_t(3));
roots_s = solve(discriminant_s == 0, s, 'ReturnConditions', true);
roots_t = solve(dot(params_t, terms_t) == 0, t, 'ReturnConditions', true);

condition2_x = 12*q*(p-x)^2 - 6*g*p^3-8*g*p*x^2 + 15 *g * p^2 * x;


%q_min_x = (3*g*p^3 - 5*g*p^2*x + 2*g*p*x^2)/(6*p^2 - 8*p*x + 3*x^2);
%q_max_x = (p^4/x^2 + 3*g*p^3 + 2*g*p*x^2 - 5*g*p^2*x)/(6*p^2 - 8*p*x + 3*x^2);
%q_min_tau = simplify(subs(q_min_x, [x, g], [p * (tau + 1), q/p * (1 + sigma)]));
%q_max_tau = simplify(subs(q_max_x, [x, g], [p * (tau + 1), q/p * (1 + sigma)]));
%pretty(q_min_tau)
%pretty(q_max_tau)